@import "components/code-sample.css";
@import "components/example.css";
@import "components/font-size-selector.css";
@import "components/navbar.css";
@import "components/theme-switcher.css";
@import "../node_modules/adwavecss/dist/styles.css";

*:not(body, h1, h2, h3, h4, h5, h6) {
  font-size: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: Ubuntu, sans-serif;
}

body {
  margin: unset;
  min-height: 100vh;
  display: block !important;
}

#root {
  min-height: 100vh;
}

@media (max-width: 829px) {
  #root {
    flex-direction: column;
  }
}

.flexbox {
  display: flex;
}

.column {
  flex-direction: column;
}

.justify-center {
  justify-content: center;
}

.align-center {
  align-items: center;
}

.navbar-container {
  view-transition-name: none;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
}

@keyframes fade-out {
  to {
    opacity: 0;
  }
}

/* define animations for the old and new content */
::view-transition-old(main-transition) {
  animation-duration: 200ms;
  animation-fill-mode: both;
  animation-timing-function: ease-out;
  animation-name: fade-out;
}
::view-transition-new(main-transition) {
  animation-delay: 200ms;
  animation-duration: 300ms;
  animation-fill-mode: both;
  animation-timing-function: ease-in;
  animation-name: fade-in;
}

#example-view {
  justify-content: center;
  margin-bottom: 2em;
  flex: 1;
  view-transition-name: main-transition;
}

.contents {
  display: contents;
}

.extend {
  flex-grow: 1;
  place-self: stretch;
}

@media (max-width: 829px) {
  .input {
    max-width: 50vw;
  }
}

.light-theme code.hljs {
  background-color: hsl(0deg 0% 95.73%);
}

code.hljs::-webkit-scrollbar {
  background-color: #0000;
  width: 8px;
  height: 8px;
  border-radius: var(--border-radius);
}

code.hljs::-webkit-scrollbar-track {
  margin: 6px;
  border-radius: var(--border-radius);
}

code.hljs::-webkit-scrollbar-thumb {
  background-color: var(--clr-bg-4);
  border-radius: var(--border-radius);
}

code.hljs::-webkit-scrollbar-track:hover {
  background-color: color-mix(in srgb, var(--clr-bg-4), transparent 70%);
}

body:has(dialog[open]) {
  overflow: hidden;
}
